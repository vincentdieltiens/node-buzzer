{"version":3,"sources":["websocket/buzzer.js"],"names":["ip","ws","callHandlers","handlers","controllerIndex","buttonIndex","i","WebsocketBuzzer","port","eventListeners","initWebsocket","event","callback","push","conn","index","indexOf","splice","close","controllerIndexes","send","JSON","stringify","times","duration","undefined","key","console","log","createServer","forEach","f","on","str","data","parse","press","code","reason","listen"],"mappings":"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","file":"buzzer.js","sourcesContent":["\n'use strict';\n\nimport * as ip from 'ip';\nimport * as ws from 'nodejs-websocket';\nimport { Buzzer } from '../buzzer';\n\nfunction callHandlers(handlers/*:Array<Function>*/, controllerIndex/*:number*/, buttonIndex/*:number*/) {\n\tif (!handlers) {\n\t\treturn;\n\t}\n\n\tfor (var i in handlers) {\n\t\thandlers[i](controllerIndex, buttonIndex);\n\t}\n}\n\nexport class WebsocketBuzzer /*implements Buzzer*/ {\n\t// The websocket server, Connection & port\n\t//ws: ws.Server;\n\t//conn: ws.Connection;\n\t//port: number;\n\n\t// listeners\n\t//handlers: Array<Array<Function>>;\n\n\t//eventListeners: { 'ready': Array<Function>, 'leave': Array<Function> };\n\n\tconstructor(port/*:number*/=8083) {\n\t\tthis.port = port;\n\t\tthis.handlers = [];\n\n\t\tthis.eventListeners = { 'ready': [], 'leave': [] };\n\t\t\n\t\tthis.initWebsocket()\n\t}\n\n\taddEventListener(event/*: string*/, callback/*: Function*/) {\n\t\tthis.eventListeners[event].push(callback);\n\t\tif (event == 'ready' && this.conn) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\tremoveEventListener(event/*: string*/, callback/*: Function*/) {\n\t\tvar index = this.eventListeners[event].indexOf(callback);\n\t\tthis.eventListeners[event].splice(index, 1);\n\t}\n\n\tleave()/*: void*/ {\n\t\tthis.ws.close();\n\t}\n\n\tlightOn(controllerIndexes/*:any*/) {\n\t\tthis.conn.send(JSON.stringify({\n\t\t\t'lights': controllerIndexes,\n\t\t\t'on': true\n\t\t}));\n\t}\n\n\tlightOff(controllerIndexes/*:any*/) {\n\t\tthis.conn.send(JSON.stringify({\n\t\t\t'lights': controllerIndexes,\n\t\t\t'on': false\n\t\t}));\n\t}\n\t\n\tblink(controllerIndexes/*:Array<number>*/, times/*:number*/=5, duration/*:number*/=0.2) {\n\t}\n\n\tonPress(callback/*: Function*/, controllerIndex/*?:number*/=undefined, buttonIndex/*?:number*/=undefined)/*: Function*/ {\n\t\tvar key = 'all';\n\t\tif (controllerIndex != undefined || buttonIndex != undefined) {\n\t\t\tkey = '';\n\t\t\tif (controllerIndex != undefined) {\n\t\t\t\tkey = 'c'+controllerIndex;\n\t\t\t}\n\t\t\tif (buttonIndex != undefined) {\n\t\t\t\tkey += 'b'+buttonIndex\n\t\t\t}\n\t\t}\n\n\t\tif (!(key in this.handlers)) {\n\t\t\tthis.handlers[key] = [];\n\t\t}\n\t\tthis.handlers[key].push(callback);\n\t\treturn () => {\n\t\t\tvar index = this.handlers[key].indexOf(callback);\n\t\t\tif (index >= 0) {\n\t\t\t\tthis.handlers[key].splice(index, 1);\n\t\t\t}\n\t\t};\t\t\n\t}\n\n\tinitWebsocket() {\n\t\tconsole.log('WebBuzzer : listening ws on '+this.port);\n\t\tthis.ws = ws.createServer((conn) => {\n\t\t\tthis.conn = conn;\n\n\t\t\tthis.eventListeners['ready'].forEach((f) => {\n\t\t\t\tf();\n\t\t\t});\n\n\t\t\tconn.on(\"text\", (str/*:string*/) => {\n\t\t\t\tvar data = JSON.parse(str);\n\t\t\t\t\n\t\t\t\tif (data.press != undefined) {\n\t\t\t\t\tvar controllerIndex = data.press;\n\t\t\t\t\tvar buttonIndex = 0;\n\t\t\t\t\t\n\t\t\t\t\tvar key = 'c'+controllerIndex;\n\t\t\t\t\tcallHandlers(this.handlers[key], controllerIndex, buttonIndex);\n\n\t\t\t\t\tcallHandlers(this.handlers['all'], controllerIndex, buttonIndex);\t\t\t\t\t\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconn.on(\"close\", (code/*:number*/, reason/*:string*/) => {\n\t\t\t\tthis.conn = null;\n\t\t\t\tthis.eventListeners['leave'].forEach((f) => {\n\t\t\t\t\tf();\n\t\t\t\t});\n\t\t\t});\n\t\t}).listen(this.port);\n\t}\n\n\tcontrollersCount()/*:number*/ {\n\t\treturn 4;\n\t}\n}\n"]}